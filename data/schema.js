"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var schema = "\ntype Character {\n\tcharacterId: String\n\tname: String\n\trace: String\n\tbloodline: String\n\tgender: String\n\trandom: [Float]\n\tvoted: Boolean\n\treports: Int\n\tlosses: Int\n\twins: Int\n}\n\ninput ParamsTop {\n\trace: String\n\tbloodline: String\n}\n\ntype TopType {\n  topType: String\n  count: Int\n}\n\ntype StatsResult {\n\ttotalCount: Int\n\tamarrCount: Int\n\tcaldariCount: Int\n\tgallenteCount: Int\n\tminmatarCount: Int\n\tmaleCount: Int\n\tfemaleCount: Int\n\ttotalVotes: Int\n\tleadingRace: TopType\n\tleadingBloodline: TopType\n}\n\ntype Query {\n\tcharacter(name: String): Character\n\n\t# Returns 2 random characters of the same gender that have not been voted yet.\n\ttwoCharacters: [Character]\n\n\t#Returns the total number of characters.\n\tcount: Int\n\n\t#Return 100 highest ranked characters. Filter by gender, race and bloodline.\n\ttop(params: ParamsTop): [Character]\n\n\t#Returns 100 lowest ranked characters.\n\tshame: [Character]\n\n\tcharacterById(id: String): Character\n\n\t# Returns characters statistics.\n\tstats: StatsResult\n}\n\ninput CharacterInput {\n\tcharacterId: String\n\tname: String\n\trace: String\n\tbloodline: String\n\tgender: String\n\trandom: [Float]\n}\n\ntype Mutation {\n\t# Create a new character\n\tcharacter(character: CharacterInput): Character\n\n\treport(id: String): Character\n}\n\nschema {\n\tquery: Query\n\tmutation: Mutation\n}\n";
exports.default = schema;
